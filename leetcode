#!/usr/bin/env bash

function leetcode() {
    NUM=$1
    NAME=$2
    if [ -z "$NUM" ]
    then
          echo "number is empty, usage: leetcode <number> <name>"
          return
    fi
    if [ -z "$NAME" ]
    then
          echo "name is empty, usage: leetcode <number> <name>"
          return
    fi

    PROBLEMROOT=$HOME/leetcode/$NUM-$NAME
    if [ -d "$PROBLEMROOT" ]
    then
          echo "path $PROBLEMROOT exists"
          return
    fi

    mkdir -p $PROBLEMROOT

cat <<EOT >> $PROBLEMROOT/makefile
all: $NAME.run

$NAME.run: main.cpp
	cc \$^ -o \$@ -std=c++11 -fsanitize=address -lstdc++ 
EOT

cat <<EOT >> $PROBLEMROOT/main.cpp
#include <iostream>

#include <algorithm>
#include <climits>
#include <cmath>
#include <cstring>
#include <deque>
#include <map>
#include <queue>
#include <random>
#include <stack>
#include <string>
#include <sstream>
#include <unordered_map>
#include <unordered_set>
#include <vector>

using namespace std;

class Solution{
};

class Test{
public:
    void run() {
        Solution s;
    }
};

int main(int argc, char **argv) {
    cout << "hello" << endl;

    Test t;
    t.run();

    return 0;
}
EOT
    cd $PROBLEMROOT
    vim main.cpp
}

